#!$(INSTALL)/bin/$(ARCH)/example

## You may have to change example to something else
## everywhere it appears in this file

cd "$(INSTALL)"

# Load binaries on architectures that need to do so.
# VXWORKS_ONLY, LINUX_ONLY and RTEMS_ONLY are macros that resolve
# to a comment symbol on architectures that are not the current
# build architecture, so they can be used liberally to do architecture
# specific things. Alternatively, you can include an architecture
# specific file.
$(VXWORKS_ONLY)ld < bin/$(ARCH)/example.munch

## Register all support components
dbLoadDatabase("dbd/example.dbd")
example_registerRecordDeviceDriver(pdbbase)

#$(LINUX_ONLY)epicsEnvSet("EPICS_CA_SERVER_PORT","6064")
#$(LINUX_ONLY)epicsEnvSet("EPICS_CA_REPEATER_PORT","6065")
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES","3000000")

drvAsynIPPortConfigure("octetport","172.23.241.2:7009")
asynSetTraceMask("octetport", 1, 0x1)

#compTabConfig 'Port name' 'Asyn octet port name' 'Number of tables'
compTabConfig("ct", "octetport", 2)
asynSetTraceMask("ct", 1, 0x9)

## Load record instances
dbLoadRecords("$(PMACUTIL)/db/compensationtable.template", "P=P,M=M,PORT=ct,MOTOR=1,OCTETPORT=octetport,EGU=mm,NELM=1024")
dbLoadRecords("$(PMACUTIL)/db/compensationtable.template", "P=P,M=M2,PORT=ct,MOTOR=2,OCTETPORT=octetport,EGU=mm,NELM=1024")

iocInit()

asynReport 1 ct
