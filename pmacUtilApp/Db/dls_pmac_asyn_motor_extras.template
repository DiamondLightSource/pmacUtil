#% macro, SPORT, Asyn port for eloss commands 
# usually PMAC_S<n> for pmacs, the name of the pmacAsynIpPort for bricks
#% macro, HOME, Prefix for autohome instance. Defaults to $(P). If unspecified,
# the template contains enough records to keep the motor record happy

record(motor, "$(P)$(M)") {
  field(SDIS, "$(P)$(M):SDIS.VAL")
}

record(scalcout, "$(P)$(M):MRESSET") {
  field(DESC, "Mres setting string")
  field(DTYP, "Soft Channel")
  field(CALC, "A")
  field(INPA, "$(P)$(M).MRES CP")
  field(OUT, "$(P)$(M):MRESASET.AOUT PP")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL")
  field(OCAL, "$P('P48%02d',$(ADDR))+$P('=%.12f',A)")
}

record(asyn, "$(P)$(M):MRESASET") {
  field(SCAN, "Passive")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(SPORT)")
  field(DESC, "Set PMAC MRES")
  field(TMOT, "5")
}

record(scalcout, "$(P)$(M):OFFSET") {
  field(DESC, "Offset setting string")
  field(DTYP, "Soft Channel")
  field(CALC, "A")
  field(INPA, "$(P)$(M).OFF CP")
  field(OUT, "$(P)$(M):OFFASET.AOUT PP")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL")
  field(OCAL, "$P('P49%02d',$(ADDR))+$P('=%.12f',A)")
  field(PINI, "YES")
}

record(asyn, "$(P)$(M):OFFASET") {
  field(SCAN, "Passive")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(SPORT)")
  field(DESC, "Set PMAC OFF")
  field(TMOT, "5")
}

record(calc, "$(P)$(M):SDIS") {
  field(DESC, "Disable on non-zero input")
  field(INPA, "$(HOME=$(P)):HM:HOMING CP")
  field(VAL, "0")
  field(CALC, "(A|B|C|D|E|F|G|H|I|J|K|L)>0")
  field(FLNK, "$(P)$(M)")
}

record(busy, "$(HOME=$(P)):HM:HOMING") {
}

record(ai, "$(P)$(M):HMPOS") {
  field(DESC, "$(DESC)")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Raw Soft Channel")
  field(PREC, "$(PREC)")
  field(LINR, "LINEAR")
  field(EGU, "$(EGU)")
  field(ESLO, "$(MRES)")
}

record(asyn, "$(P)$(M):HMGETPOS") {
  field(DESC, "Get position from PMAC")
  field(SCAN, ".2 second")
  field(PORT, "$(SPORT)")
  field(AOUT, "#$(ADDR)P")
  field(DISV, "0")
  field(SDIS, "$(HOME=$(P)):HM:HOMING")
  field(FLNK, "$(P)$(M):HMPARSPOS")
  field(TMOT, "5")
}

record(scalcout, "$(P)$(M):HMPARSPOS") {
  field(DESC, "Parse position string")
  field(SCAN, "Passive")
  field(CALC, "SSCANF(AA,'%d')")
  field(OUT, "$(P)$(M):HMPOS.RVAL PP")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(INAA, "$(P)$(M):HMGETPOS.AINP")
}

record(stringout, "$(P)$(M):SETHMPV") {
  field(PINI, "YES")
  field(VAL, "$(P)$(M)")
  field(OUT, "$(HOME=$(P)):HM:M$(ADDR)PV PP")
}

record(stringout, "$(HOME=$(P)):HM:M$(ADDR)PV"){
}

record(ao, "$(P)$(M):KILL") {
  field(VAL, "0")
  field(FLNK, "$(P)$(M):KILLPROC")
}

record(asyn, "$(P)$(M):KILLPROC") {
  field(SCAN, "Passive")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(SPORT)")
  field(DESC, "Kill pmac motor $(ADDR)")
  field(AOUT, "#$(ADDR)k")
  field(TMOT, "5")
}
