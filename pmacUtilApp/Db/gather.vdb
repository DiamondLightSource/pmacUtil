#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("../../dbd/pmacUtil.dbd")
#! DBDEND


# Send the "list gather" command to the PMAC and receives the whole ASCII array
# of data which will be parsed by the SNL.
# It has to be Hybrid in order to receive all this data.
record(asyn, "$(P)$(M):GETDATA") {
  field(DESC, "send list gather cmd")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(PORT)")
  field(TMOT, "10.0")
  field(AOUT, "list gather")
  field(IFMT, "Hybrid")
}

# Send all necessary I-variables to the PMAC in order to setup the gather:
# * I5050 and I5051 for choosing which channels to gather from.
# * I5001 to I50048 for choosing which addresses to gather from.
# * I5049 gather sample period/time (in servo cycles).
record(asyn, "$(P)$(M):SETUP") {
  field(DESC, "configure ivars for gather")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(PORT)")
  field(IFMT, "ASCII")
}

# Send the trigger signal to the PMAC: define gather NN
record(asyn, "$(P)$(M):PMACTRIG") {
  field(DESC, "configure ivars for gather")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(PORT)")
  field(IFMT, "ASCII")
}

record(waveform, "$(P)$(M):VELO") {
  field(DESC, "sampled velocity")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):FERR") {
  field(DESC, "sampled following error")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):POSN") {
  field(DESC, "sampled actual position")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

# Kept updated with the current state of the SNL application.
# Not intended for end user display.
record(state, "$(P)$(M):STATE") {
  field(DESC, "current SNL state")
  field(PINI, "YES")
  field(VAL, "not initialised")
}

# Holds a user message about the state of the application: errors, warnings and so on.
record(stringin, "$(P)$(M):MSG") {
  field(DESC, "user message")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "not initialised")
}

# The sample period (or sample time) in PMAC servo cycles.
record(ao, "$(P)$(M):SPERIOD") {
  field(DESC, "sample period [servo cycles]")
  field(DTYP, "Soft Channel")
  field(PREC, "0")
  field(LINR, "NO CONVERSION")
  field(HOPR, "10000")
  field(LOPR, "1")
}

# SNL will set this to 1 (parsing) when parsing the data from PMAC.
record(bi, "$(P)$(M):PARSING") {
  field(DESC, "set when parsing data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

# set to 1 (busy) when collecting data from the PMAC.
record(bi, "$(P)$(M):COLLECTING") {
  field(DESC, "set when collecting data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

# Start executing gather function when user writes to this record.
# Will go back to 0 (done) when gather scan is over and parsed.
record(busy, "$(P)$(M):EXECUTE") {
  field(DESC, "Start gather function")
  field(SCAN, "Passive")
  field(VAL, "Done")
}

record(stringout, "$(P)$(M):MOTOR") {
  field(DESC, "motor record name")
  field(DTYP, "Soft Channel")
}

record(ao, "$(P)$(M):DEMAND") {
  field(DESC, "set demand position")
  field(DTYP, "Soft Channel")
  field(LINR, "NO CONVERSION")
  field(FLNK, "$(P)$(M):CALCTIME")
  field(PINI, "YES")
  field(PREC, "3")
}

record(ao, "$(P)$(M):MOVE") {
  field(DESC, "send cmd to motorrec")
  field(DTYP, "Soft Channel")
  field(PREC, "3")
}

record(scalcout, "$(P)$(M):MRBV") {
  field(DESC, "Motor RBV")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(CALC, "A")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(PINI, "YES")
  field(PREC, "3")
}

record(scalcout, "$(P)$(M):AXISNO") {
  field(DESC, "get axis no from motor")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(DOPT, "Use CALC")
  field(CALC, "AA")
  field(OOPT, "Every Time")
}

record(calcout, "$(P)$(M):CALCTIME") {
  field(DESC, "calculate move time")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(CALC, "((abs(A-D))/B)+(2*C)")
  field(INPD, "$(P)$(M):DEMAND PP")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(EGU, "s")
  field(PREC, "3")
  field(SCAN, "Passive")
}

# Use this to force processing of settings records: axis no, move time and so on.
record(fanout, "$(P)$(M):PSETTINGS") {
  field(DESC, "process settings records")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(FLNK, "$(P)$(M):AXISNO")
  field(LNK1, "$(P)$(M):DEMAND")
}

record(ai, "$(P)$(M):TSAMPLE") {
  field(DESC, "time per sample")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(PREC, "3")
  field(LINR, "NO CONVERSION")
  field(EGU, "ms")
}

record(ai, "$(P)$(M):TGATHER") {
  field(DESC, "entire gather time")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(PREC, "3")
  field(LINR, "NO CONVERSION")
  field(EGU, "s")
}

record(ai, "$(P)$(M):FSAMPLE") {
  field(DESC, "sample frequency")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(PREC, "3")
  field(LINR, "NO CONVERSION")
  field(EGU, "kHz")
}

record(bi, "$(P)$(M):GATHERING") {
  field(DESC, "set when gathering data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

#! Further lines contain data used by VisualDCT
#! View(0,256,1.1)
#! Record("$(P)$(M):GETDATA",380,60,0,1,"$(P)$(M):GETDATA")
#! Record("$(P)$(M):SETUP",560,68,0,1,"$(P)$(M):SETUP")
#! Record("$(P)$(M):PMACTRIG",740,68,0,1,"$(P)$(M):PMACTRIG")
#! Record("$(P)$(M):VELO",520,314,0,1,"$(P)$(M):VELO")
#! Record("$(P)$(M):FERR",920,314,0,1,"$(P)$(M):FERR")
#! Record("$(P)$(M):POSN",720,314,0,1,"$(P)$(M):POSN")
#! Record("$(P)$(M):STATE",240,381,0,1,"$(P)$(M):STATE")
#! Record("$(P)$(M):MSG",40,388,0,1,"$(P)$(M):MSG")
#! Record("$(P)$(M):SPERIOD",520,740,0,1,"$(P)$(M):SPERIOD")
#! Record("$(P)$(M):PARSING",40,680,0,1,"$(P)$(M):PARSING")
#! Record("$(P)$(M):COLLECTING",240,520,0,1,"$(P)$(M):COLLECTING")
#! Record("$(P)$(M):EXECUTE",100,161,0,1,"$(P)$(M):EXECUTE")
#! Record("$(P)$(M):MOTOR",520,636,0,1,"$(P)$(M):MOTOR")
#! Record("$(P)$(M):DEMAND",760,660,0,1,"$(P)$(M):DEMAND")
#! Field("$(P)$(M):DEMAND.FLNK",16777215,1,"$(P)$(M):DEMAND.FLNK")
#! Link("$(P)$(M):DEMAND.FLNK","$(P)$(M):CALCTIME")
#! Field("$(P)$(M):DEMAND.VAL",16777215,1,"$(P)$(M):DEMAND.VAL")
#! Record("$(P)$(M):MOVE",260,941,0,1,"$(P)$(M):MOVE")
#! Record("$(P)$(M):MRBV",40,891,0,1,"$(P)$(M):MRBV")
#! Record("$(P)$(M):AXISNO",1420,466,0,0,"$(P)$(M):AXISNO")
#! Record("$(P)$(M):CALCTIME",1140,704,0,0,"$(P)$(M):CALCTIME")
#! Field("$(P)$(M):CALCTIME.INPD",16777215,0,"$(P)$(M):CALCTIME.INPD")
#! Link("$(P)$(M):CALCTIME.INPD","$(P)$(M):DEMAND.VAL")
#! Record("$(P)$(M):PSETTINGS",1140,454,0,1,"$(P)$(M):PSETTINGS")
#! Field("$(P)$(M):PSETTINGS.LNK1",16777215,0,"$(P)$(M):PSETTINGS.LNK1")
#! Link("$(P)$(M):PSETTINGS.LNK1","$(P)$(M):DEMAND")
#! Field("$(P)$(M):PSETTINGS.FLNK",16777215,1,"$(P)$(M):PSETTINGS.FLNK")
#! Link("$(P)$(M):PSETTINGS.FLNK","$(P)$(M):AXISNO")
#! Record("$(P)$(M):TSAMPLE",520,926,0,1,"$(P)$(M):TSAMPLE")
#! Record("$(P)$(M):TGATHER",740,926,0,1,"$(P)$(M):TGATHER")
#! Record("$(P)$(M):FSAMPLE",940,926,0,1,"$(P)$(M):FSAMPLE")
#! Box(Box0,40,40,320,280,1,16711731,null)
#! Box(Box4,500,540,1100,900,1,16711731,null)
#! Box(Box3,500,300,1100,520,1,16711731,null)
#! Box(Box2,360,40,920,260,1,16711731,null)
#! Box(Box1,20,320,440,860,1,16711731,null)
#! TextBox(TB0,60,60,320,140,0,"Dialog",12,1,16777215,"Start the gather function\nfrom this record.\nThis record returns when the whole\nprocess is complete (or failed).",null)
#! TextBox(TB4,520,620,800,560,0,"Dialog",12,1,16777215,"User selectable settings: all the settings the user need to\ncontrol to configure a specific gather setup.",null)
#! TextBox(TB3,520,460,840,500,0,"Dialog",12,1,16777215,"The waveform records will contain the sampled\ndata when the gather is successfully completed.",null)
#! TextBox(TB2,400,220,760,260,0,"Dialog",12,1,16777215,"The ASYN records do the direct communication with \nthe PMAC through the 'serial' port $(PORT)",null)
#! TextBox(TB1,40,320,420,380,0,"Dialog",12,1,16777215,"These records are used for keeping\ntrack of the current state and status\nof the gather application",null)
#! Record("$(P)$(M):GATHERING",40,520,0,1,"$(P)$(M):GATHERING")
