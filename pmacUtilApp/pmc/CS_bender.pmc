CLOSE
;################################################
; Define I04-1 bending mirror actuator to radius of curvature translation
; Author: Ronaldo Mercado
; Used variables: Q77, Q87, Q97, Q100..105
; Macros
; COORD = $(COORD) ;CS number, e.g. 2
; PLC = $(PLC) ;PLC number, should be CS number+15, e.g. 17
; J1 = $(J1) ;Axisnum for bending actuator
; LIMIT = $(LIMIT) ; [Km] where the CS stops operating
;
; This CS relies on the fit presented in SCI-OPT-REP-0058
; where 1/R is ~ linear with the number of counts
; 
; The actuator axis has resolution J1MRES 
;
; Q100 - SLOPE = $(SLOPE) 
; Q101 - INTERCEPT = $(INTERCEPT) 
; Q102 - Actuator position
; Q103 - MRES for radius of curvature motor
; Q104 - LIMIT
; Q105 - singularity position for bender motor [mm]
;################################################

; The CS axis is the radius of curvature with 
; EGU in Km.
; There is a discontinuity in R when 1/R is zero
;
; Change to CS$(COORD)
&$(COORD)
; The fit provided by metrology 
; 1/R = SLOPE * J1 + INTERCEPT
; slope [1/Km / mm ]
#define SLOPE Q100
; intercept [1/Km]
#define INTERCEPT Q101
; actuator pos for inverse calc
#define TRANSLATION Q102 
; for translating Q7 "counts" to Km [Km/ "count"]
#define MRES Q103
; Limit where CS stops operating [Km]
#define LIMIT Q104

; These are set by mres_reporting_motor.template
; [mm /count]
#define J1MRES P(100+$(J1))
#define J1OFF  P(300+$(J1))

; units of J1POS are [mm]
; units of J1MRES are [mm/count]
#define J1POS (J1MRES*P$(J1) + J1OFF)


SLOPE = $(SLOPE)
INTERCEPT = $(INTERCEPT)
MRES = $(MRES)
LIMIT = $(LIMIT)

; Set relevant axes to use kinematics
#$(J1)->I ; actuator


OPEN FORWARD
; Calculate radius of curvature
; Q7 = Radius of curvature in "counts"
; R is Q7  * MRES
; J1POS is position in mm
CLEAR
;TRANSLATION=J1POS
; This is the radius. Has singularity (Inf) at TRANSLATION = -INTERCEPT/SLOPE
IF ( ABS(J1POS+INTERCEPT/SLOPE) < ABS(1/LIMIT/SLOPE) )
    M5$(COORD)82=1
ELSE 
    Q7=1.0/(SLOPE *J1POS + INTERCEPT) / MRES
ENDIF
CLOSE

OPEN INVERSE
; P$(J1) = position of bender actuator
CLEAR
; work out the actuator position from the radius of curvature
TRANSLATION=((1/(Q7* MRES)-INTERCEPT))/SLOPE
P$(J1)=(TRANSLATION-J1OFF)/J1MRES
CLOSE

OPEN PLC$(PLC)
CLEAR
; As forward kinematic, but with Px = mx62/(Ix08*32)
; Put deadband into Q9x
#define J1DB  i$(J1)65*J1MRES/16
#define J1POS (J1MRES*m$(J1)62/(I$(J1)08*32)+J1OFF)
ADDRESS&$(COORD)
Q105 = -INTERCEPT/SLOPE
IF ( ABS(J1POS+INTERCEPT/SLOPE) < ABS(1/LIMIT/SLOPE) )
    M5$(COORD)82=1
ELSE
    Q87=1.0/(SLOPE*J1POS + INTERCEPT ) / MRES
ENDIF
;TODO: do deadbands properly
Q97=ABS(J1DB)/$(MRES)
CLOSE
ENABLE PLC$(PLC)

