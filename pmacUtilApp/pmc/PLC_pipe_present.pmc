CLOSE

;################################
; PLC_pipe_present.pmc (for I12)
;
; Author: Andy Foster
; Date:   20/01/12
;
; This PLC looks at, upto, 3 GPIO input signals on a Geobrick.
; Each signal reports the presence (1) or absence (0) of a pipe in EH1.
;
; The "complete pipe" is signalled by GPIO #6 and this is wired to
; geobrick's 8, 9, 10, 11, 12, 14, 16.
; The PLC prevents motion of all motors on TAB4, TAB3, TAB2, ST1 and TAB1.
; See schematic for details of these.
;
; The "Long SAXS pipe" is signalled by GPIO #4 and this is wired to
; geobrick's 11, 12, 16.
; The PLC prevents motion of all motors on TAB4 and TAB3, except module 4
; on TAB3.
; See schematic for details of these.
;
; The "Short SAXS pipe" is signalled by GPIO #2 and this wired to
; geobrick 16.
; The PLC prevents motion of all motors on TAB4.
; See schematic for details of this.
;
; Method:
; Put all motors (not currently in a coordinate system)
; into a coordinate system and use the feedrate parameter to prevent
; motion.
;
; When the signal is detected:
; (a) a kill command will be sent to all relevant motors
; (b) an abort motion command will be sent to the coordinate system
; (c) the feedrate parameter for the coordinate system will be set to 0%.
;
; When the signal is removed:
; (a) the feedrate parameter for the coordinate system will be set back to 100%.
;
; Note: We should not use "Ixx0=0" as this leaves the axis in an
;       indeterminant state.
;
; Macros:
; PLC                          - PLC number
; COORD_NUMBER                 - Coordinate System Number
; NAXES                        - Number of axes on controller (8 for a standard geobrick)
; SIGNAL1_IN                   - M-variable pointing at a GPIO input signal
; SIGNAL2_IN                   - M-variable pointing at a GPIO input signal
; SIGNAL3_IN                   - M-variable pointing at a GPIO input signal
; MOT01_DISABLE..MOT16_DISABLE - Set to 1 if this axis needs to be disabled
;################################

; Should axis be disabled or not - set to 1 for disable, 0 otherwise
P$(PLC)01 = $(MOT01_DISABLE=0)
P$(PLC)02 = $(MOT02_DISABLE=0)
P$(PLC)03 = $(MOT03_DISABLE=0)
P$(PLC)04 = $(MOT04_DISABLE=0)
P$(PLC)05 = $(MOT05_DISABLE=0)
P$(PLC)06 = $(MOT06_DISABLE=0)
P$(PLC)07 = $(MOT07_DISABLE=0)
P$(PLC)08 = $(MOT08_DISABLE=0)
P$(PLC)09 = $(MOT09_DISABLE=0)
P$(PLC)10 = $(MOT10_DISABLE=0)
P$(PLC)11 = $(MOT11_DISABLE=0)
P$(PLC)12 = $(MOT12_DISABLE=0)
P$(PLC)13 = $(MOT13_DISABLE=0)
P$(PLC)14 = $(MOT14_DISABLE=0)
P$(PLC)15 = $(MOT15_DISABLE=0)
P$(PLC)16 = $(MOT16_DISABLE=0)

#define axisNumber       P$(PLC)00
#define axisDisableFlag  P(axisNumber + $(PLC)00)
#define pipePresent1     $(SIGNAL1_IN=0)
#define pipePresent2     $(SIGNAL2_IN=0)
#define pipePresent3     $(SIGNAL3_IN=0)
#define pipePresent      P$(PLC)17
#define lastPipePresent  P$(PLC)18
#define coordSystemSet   P$(PLC)19


OPEN PLC $(PLC)
CLEAR

IF( coordSystemSet = 0 )                    ; Motors not in a coordinate system
  axisNumber = 1
  WHILE( axisNumber !> $(NAXES) )
    IF( axisDisableFlag = 1 )
      CMD "&$(COORD_NUMBER) axisNumber->X"  ; Assign motor to coordinate system
    END IF
    axisNumber = axisNumber + 1
  END WHILE
  CMD "&$(COORD_NUMBER) %100"               ; Set feedrate of coordinate system to 100%
  coordSystemSet = 1                        ; Only do this once
END IF

IF( pipePresent1 = 1 OR pipePresent2 = 1 OR pipePresent3 = 1 )  ; Check up to 3 incoming signals
  pipePresent = 1
ELSE
  pipePresent = 0
END IF

IF( pipePresent != lastPipePresent )        ; Change of state of the pipe-present signal
  lastPipePresent = pipePresent
  IF( pipePresent = 1 )                     ; a pipe is present
    axisNumber = 1
    WHILE( axisNumber !> $(NAXES) )
      IF( axisDisableFlag = 1 )
        CMD "#axisNumber K"                 ; Kill motor (jogs)
      END IF
      axisNumber = axisNumber + 1
    END WHILE
    CMD "&$(COORD_NUMBER) A"                ; Abort motion in coordinate system (motion programs)
    CMD "&$(COORD_NUMBER) %0"               ; Set feedrate of coordinate system to 0%
  ELSE 
    IF( pipePresent = 0 )                   ; all pipes have been removed
      CMD "&$(COORD_NUMBER) %100"           ; Set feedrate of coordinate system to 100%
    END IF
  END IF
END IF

CLOSE

DISABLE PLC $(PLC)
